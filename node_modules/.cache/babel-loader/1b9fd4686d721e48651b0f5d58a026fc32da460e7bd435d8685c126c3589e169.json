{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const getWeather = createAsyncThunk(\"weather/getWeather\", async () => {\n  const {\n    data\n  } = await axios.request({\n    url: \"https://api.gismeteo.net/v2/search/cities/?lang=en&query=москв\",\n    method: \"post\",\n    headers: {\n      \"X-Gismeteo-Token\": \"56b30cb255.3443075\"\n    }\n  });\n  return data;\n});\nconst initialState = {\n  items: []\n};\nconst weatherSlice = createSlice({\n  name: \"weather\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getWeather.pending, state => {\n      state.items = null;\n      state.status = \"loading\";\n    }).addCase(getWeather.fulfilled, (state, action) => {\n      console.log(action.payload);\n      state.items = action.payload;\n      state.status = \"success\";\n    }).addCase(getWeather.rejected, state => {\n      state.items = null;\n    });\n  }\n});\nexport const weatherReducer = weatherSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","getWeather","data","request","url","method","headers","initialState","items","weatherSlice","name","reducers","extraReducers","builder","addCase","pending","state","status","fulfilled","action","console","log","payload","rejected","weatherReducer","reducer"],"sources":["D:/Works/MyAppReact/ImmigrantToday/my-app/src/redux/slices/weatherSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const getWeather = createAsyncThunk(\"weather/getWeather\", async() => {\r\n  const { data } = await axios.request({\r\n    url: \"https://api.gismeteo.net/v2/search/cities/?lang=en&query=москв\",\r\n    method: \"post\",\r\n    headers: {\r\n      \"X-Gismeteo-Token\": \"56b30cb255.3443075\",\r\n    },\r\n});\r\n\r\n\r\n  return data;\r\n});\r\n\r\n\r\nconst initialState:any = {\r\n  items: [],    \r\n};\r\nconst weatherSlice = createSlice({\r\n  name: \"weather\",\r\n  initialState,\r\n  reducers: {\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getWeather.pending, (state) => {\r\n        state.items = null;\r\n        state.status = \"loading\";})\r\n      .addCase(getWeather.fulfilled, (state, action) => {\r\n        console.log(action.payload);\r\n        \r\n        state.items = action.payload;\r\n        state.status = \"success\";})\r\n      .addCase(getWeather.rejected, (state) => {\r\n        state.items = null;});\r\n           \r\n    },\r\n});\r\nexport const weatherReducer = weatherSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,oBAAoB,EAAE,YAAW;EAC1E,MAAM;IAAEI;EAAK,CAAC,GAAG,MAAMF,KAAK,CAACG,OAAO,CAAC;IACnCC,GAAG,EAAE,gEAAgE;IACrEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,kBAAkB,EAAE;IACtB;EACJ,CAAC,CAAC;EAGA,OAAOJ,IAAI;AACb,CAAC,CAAC;AAGF,MAAMK,YAAgB,GAAG;EACvBC,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,YAAY,GAAGV,WAAW,CAAC;EAC/BW,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE,CACV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,UAAU,CAACc,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACR,KAAK,GAAG,IAAI;MAClBQ,KAAK,CAACC,MAAM,GAAG,SAAS;IAAC,CAAC,CAAC,CAC5BH,OAAO,CAACb,UAAU,CAACiB,SAAS,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAChDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;MAE3BN,KAAK,CAACR,KAAK,GAAGW,MAAM,CAACG,OAAO;MAC5BN,KAAK,CAACC,MAAM,GAAG,SAAS;IAAC,CAAC,CAAC,CAC5BH,OAAO,CAACb,UAAU,CAACsB,QAAQ,EAAGP,KAAK,IAAK;MACvCA,KAAK,CAACR,KAAK,GAAG,IAAI;IAAC,CAAC,CAAC;EAEzB;AACJ,CAAC,CAAC;AACF,OAAO,MAAMgB,cAAc,GAAGf,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}