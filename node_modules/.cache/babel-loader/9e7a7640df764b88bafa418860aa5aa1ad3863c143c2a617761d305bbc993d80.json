{"ast":null,"code":"var _jsxFileName = \"D:\\\\Works\\\\MyAppReact\\\\ImmigrantToday\\\\my-app\\\\src\\\\componets\\\\ModalBurger\\\\ModalBurger.tsx\",\n  _s = $RefreshSig$();\nimport style from \"./ModalBurger.module.scss\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModalBurger = _ref => {\n  _s();\n  let {\n    items,\n    img,\n    text\n  } = _ref;\n  const [toggle, setToggle] = React.useState(false);\n  const burgerRef = React.useRef(n);\n  const handleToggle = () => {\n    setToggle(!toggle);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleToggle,\n      className: style.top_nav_text,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.modal_img,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: handleToggle,\n        className: clsx(style.img, {\n          [style.img_active]: toggle\n        }),\n        src: \"./assets/v.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(style.modal, {\n          [style.modal_active]: toggle\n        }),\n        children: toggle ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: items === null || items === void 0 ? void 0 : items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 38\n          }, this))\n        }, void 0, false) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(ModalBurger, \"nWLjO87E1iR+oDCZUvWPCRJJo6k=\");\n_c = ModalBurger;\nvar _c;\n$RefreshReg$(_c, \"ModalBurger\");","map":{"version":3,"names":["style","React","clsx","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalBurger","_ref","_s","items","img","text","toggle","setToggle","useState","burgerRef","useRef","n","handleToggle","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","top_nav_text","modal_img","img_active","modal","modal_active","map","item","_c","$RefreshReg$"],"sources":["D:/Works/MyAppReact/ImmigrantToday/my-app/src/componets/ModalBurger/ModalBurger.tsx"],"sourcesContent":["import style from \"./ModalBurger.module.scss\";\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nexport const ModalBurger = ({ items, img, text }: { items?:Array<any>, img?:string, text?: string}) => {\r\n  const [ toggle, setToggle ] = React.useState(false);\r\n  const burgerRef = React.useRef(n)\r\n  const handleToggle = () => {\r\n    setToggle(!toggle);\r\n  };\r\n  \r\n  \r\n  return <>\r\n    <img src={img} alt={text} />\r\n    <div onClick={handleToggle} className={style.top_nav_text}>{text}</div>\r\n    <div className={style.modal_img}><img \r\n      onClick={handleToggle} className={clsx(style.img,{[style.img_active]:toggle})} src=\"./assets/v.png\" alt=\"\" />\r\n    <div className={clsx(style.modal,{[style.modal_active]:toggle})}>\r\n      {toggle? <>{items?.map(item => <div>{item}</div>)}</> : null}\r\n    </div>\r\n    </div></>;\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACxB,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAA4E;EAAAC,EAAA;EAAA,IAA3E;IAAEC,KAAK;IAAEC,GAAG;IAAEC;EAAuD,CAAC,GAAAJ,IAAA;EAChG,MAAM,CAAEK,MAAM,EAAEC,SAAS,CAAE,GAAGb,KAAK,CAACc,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMC,SAAS,GAAGf,KAAK,CAACgB,MAAM,CAACC,CAAC,CAAC;EACjC,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBL,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAGD,oBAAOT,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACLhB,OAAA;MAAKiB,GAAG,EAAEV,GAAI;MAACW,GAAG,EAAEV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC5BtB,OAAA;MAAKuB,OAAO,EAAER,YAAa;MAACS,SAAS,EAAE5B,KAAK,CAAC6B,YAAa;MAAAT,QAAA,EAAER;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eACvEtB,OAAA;MAAKwB,SAAS,EAAE5B,KAAK,CAAC8B,SAAU;MAAAV,QAAA,gBAAChB,OAAA;QAC/BuB,OAAO,EAAER,YAAa;QAACS,SAAS,EAAE1B,IAAI,CAACF,KAAK,CAACW,GAAG,EAAC;UAAC,CAACX,KAAK,CAAC+B,UAAU,GAAElB;QAAM,CAAC,CAAE;QAACQ,GAAG,EAAC,gBAAgB;QAACC,GAAG,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAC/GtB,OAAA;QAAKwB,SAAS,EAAE1B,IAAI,CAACF,KAAK,CAACgC,KAAK,EAAC;UAAC,CAAChC,KAAK,CAACiC,YAAY,GAAEpB;QAAM,CAAC,CAAE;QAAAO,QAAA,EAC7DP,MAAM,gBAAET,OAAA,CAAAE,SAAA;UAAAc,QAAA,EAAGV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEwB,GAAG,CAACC,IAAI,iBAAI/B,OAAA;YAAAgB,QAAA,EAAMe;UAAI;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO;QAAC,iBAAI,GAAG;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA,gBAAG;AACb,CAAC;AAACjB,EAAA,CAjBWF,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}